#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)lib.cfg	9.4	07/10/08 SMI"
#


#
# Make configuration file included at the end of library Makefile
#

com  :: lib
com_asmc_i386  :: lib
com_sse_i386   :: lib
com_asmc_amd64 :: lib
com_sse_amd64  :: lib

$($(TARCH)_COM) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "SUB_DIRS=$(SUB_DIRS)" lib

$($(TARCH)_ASMC_I386) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "SUB_DIRS=$(SUB_DIRS)" "DIR_MODE=obj" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" "USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" lib

$($(TARCH)_SSE_I386) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "SUB_DIRS=$(SUB_DIRS)" "DIR_MODE=obj" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" "USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" lib

$($(TARCH)_ASMC_AMD64) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "SUB_DIRS=$(SUB_DIRS)" "DIR_MODE=obj" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=amd64+sse"  "CFLAGS_CHIP_V=-xarch=amd64" "USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" lib

$($(TARCH)_SSE_AMD64) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "SUB_DIRS=$(SUB_DIRS)" "DIR_MODE=obj" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=amd64+sse"  "CFLAGS_CHIP_V=-xarch=amd64" "USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" lib

$($(TARCH)_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" lib

$(sparc_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" lib

$(i386_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" lib

$(sparc_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" lib

$(i386_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "SUB_DIRS=$(SUB_DIRS)" lib

$($(TARCH)_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" lib

$($(TARCH)_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR=$($(TARCH)_V9_DIR)" \
		"LDFLAGS_CHIP_V=$(LDFLAGS_$(TARCH)_V9)" \
		"USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" lib

$(sparc_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" lib

$(i386_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		"USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" lib

$(sparc_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" lib

$(i386_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		"USE_EMBEDDED_SUNMATH=$(USE_EMBEDDED_SUNMATH)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" lib

$($(TARCH)_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" lib

#
# Builtin targets for tcov-a
#
tcov ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V8PLUS)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V8PLUSB)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V8PLUSC)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V8PLUSA)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR=$($(TARCH)_V9_DIR)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V9)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V9A)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V9B)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

$($(TARCH)_TCOV_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"LD=$(CC)" "LDFLAGS_TCOV=$(LDFLAGS_TCOV_V) $$(ASFLAGS_$(TARCH)_V9C)" \
		"LDFLAGS_MUST_BE_PURE_V=" lib

#
# Builtin targets for debug
#
debug_all ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
	        "SUB_DIRS=$(SUB_DIRS)" debug_lib
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)"  \
		debug_lib
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

debug_all_v9 ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR=$($(TARCH)_V9_DIR)" "DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"SUB_DIRS=$(SUB_DIRS)" debug_lib
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)"  \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)"  "SUB_DIRS=$(SUB_DIRS)"\
		debug_lib

debug ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"SUB_DIRS=$(SUB_DIRS)" debug_lib

$($(TARCH)_DEBUG_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR=$($(TARCH)_V9_DIR)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

$($(TARCH)_DEBUG_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "OBJS_ALT=$(OBJS_ALT_V)" \
		"OBJS_UTILS_ALT = $(OBJS_UTILS_ALT_V)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" "SUB_DIRS=$(SUB_DIRS)" \
		debug_lib

#
# Builtin targets for clean
#
clean_all :: cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

clean_debug_all ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

clean :: cleano

$($(TARCH)_CLEAN_COM) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_ASMC_I386) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "DIR_MODE=asmc" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" \
		"CHIP_DIR_V=$($(TARCH)_V8_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_SSE_I386) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "DIR_MODE=asmc" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" \
		"CHIP_DIR_V=$($(TARCH)_V8_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_ASMC_AMD64) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "DIR_MODE=asmc" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=i386+sse" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_SSE_AMD64) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "DIR_MODE=asmc" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=i386+sse" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

clean_tcov ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_TCOV_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_TCOV_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_TCOV_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_TCOV_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_TCOV_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_TCOV_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_TCOV_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_TCOV_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

clean_debug ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_DEBUG_V8P) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_DEBUG_V8PB) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_DEBUG_V8PC) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_DEBUG_V8PA) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_DEBUG_V9) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" "SUB_DIRS=$(SUB_DIRS)" \
		cleano

$($(TARCH)_CLEAN_DEBUG_V9A) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_DEBUG_V9B) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

$($(TARCH)_CLEAN_DEBUG_V9C) ::
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) "ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" "SUB_DIRS=$(SUB_DIRS)" cleano

lib : cleano $(WAIT) $(LIB_DIR) $(WAIT) $($(TARCH)_STRIP) $(WAIT) \
	$(LIB_DIR)/$(LIB_LIBNAME)$(SHAREDLIB_EXT)$(MLIB_API_VERS) $(WAIT) \
	$($(TARCH)_SLIB) $(WAIT)

debug_lib : $(LIB_DIR) \
	$(LIB_DIR)/$(LIB_LIBNAME)$(SHAREDLIB_EXT)$(MLIB_API_VERS) \
	$($(TARCH)_SLIB)

static_lib :	$(LIB_DIR)/$(LIB_LIBNAME)$(STATICLIB_EXT)

strip_lib  : $$(OBJS)
#	$(STRIP) $(OBJS)
# this solution will work here against the "Argument list too long" error
#	echo $(OBJS) | xargs $(STRIP)

cleano :
	$(RM) $(LIB_DIR)/$(LIB_LIBNAME)$(SHAREDLIB_EXT)$(MLIB_API_VERS) \
		$(LIB_DIR)/$(LIB_LIBNAME)$(STATICLIB_EXT)

$(LIB_DIR)/$(LIB_LIBNAME)$(SHAREDLIB_EXT)$(MLIB_API_VERS) : $$(OBJS) $(WAIT) $(DEF) $(WAIT) $(MAPFILES) $(WAIT)
	$(LINK.c) $(OBJS) $(LD_LIB_ARGS) $(LD_OUTFILE)
# but it will fail here when Intel C compiler is a linker
#	echo $(OBJS) | xargs $(LINK.c) $(LD_LIB_ARGS) $(LD_OUTFILE) 

$(LIB_DIR)/$(LIB_LIBNAME)$(STATICLIB_EXT) : $$(OBJS) $(WAIT) $(DEF) $(WAIT) $(FILES_IL) $(WAIT)
	($(AR) -crv $(AR_OUTFILE) $(OBJS); \
	$(RANLIB) $(AR_OUTFILE))

$(FILES_IL) :
	$(RM) $(OBJS:%$(OBJ_EXT)=%.il)

$(USE_GNU_MAKE)$$(OBJS) :

#
# Automatic def file creation on NT
#

$(DEF): $$(OBJS) $(MAPFILES)
	@[ -d $(LIB_DIR) ] || $(MKDIR) $(LIB_DIR)
	$(RM) $(DEF)
	$(ECHO) "LIBRARY            $(LIB_LIBNAME)"    >  $(DEF)
	$(ECHO) "DESCRIPTION        $(LIBDESCRIPTION)" >> $(DEF)
	$(ECHO) "EXPORTS"                              >> $(DEF)
	$(CAT) $(MAPFILES) |\
	$(SED) -n 's/^ *\(mlib_[^;]*\);.*$$/\1/p' |\
	$(SORT) -u                                     >> $(DEF)

#   Old version
#	$(DUMPBIN) $(DUMPBIN_ARGS)                     >> $(DEF)
