#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)leaf.cfg	9.3	07/10/08 SMI"
#

#
# Make configuration file included by all leaf-level Makefiles
#

# get most stuff done

include $(PROJECT_ROOT)/make/main.cfg

include $(CONFIG.$(TARCH).C)        # ... and compiler tools

#
# TARGET_VA will convert $@ (expected to be 'debug' or 'v8pa' etc.)
#   Used for variant recursion.
#

TARGET_debug_V                        = com
TARGET_$($(TARCH)_COM)_V              = com
TARGET_$($(TARCH)_V8P)_V              = com
TARGET_$($(TARCH)_V8PA)_V             = com
TARGET_$($(TARCH)_V8PB)_V             = com
TARGET_$($(TARCH)_V8PC)_V             = com
TARGET_$($(TARCH)_V9)_V               = com
TARGET_$($(TARCH)_V9A)_V              = com
TARGET_$($(TARCH)_V9B)_V              = com
TARGET_$($(TARCH)_V9C)_V              = com
TARGET_$($(TARCH)_DEBUG_V8P)_V        = com
TARGET_$($(TARCH)_DEBUG_V8PB)_V       = com
TARGET_$($(TARCH)_DEBUG_V8PC)_V       = com
TARGET_$($(TARCH)_DEBUG_V8PA)_V       = com
TARGET_$($(TARCH)_DEBUG_V9)_V         = com
TARGET_$($(TARCH)_DEBUG_V9A)_V        = com
TARGET_$($(TARCH)_DEBUG_V9B)_V        = com
TARGET_$($(TARCH)_DEBUG_V9C)_V        = com

TARGET_clean_debug_V                  = clean
TARGET_$($(TARCH)_CLEAN_COM)_V        = clean
TARGET_$($(TARCH)_CLEAN_V8P)_V        = clean
TARGET_$($(TARCH)_CLEAN_V8PB)_V       = clean
TARGET_$($(TARCH)_CLEAN_V8PC)_V       = clean
TARGET_$($(TARCH)_CLEAN_V8PA)_V       = clean
TARGET_$($(TARCH)_CLEAN_V9)_V         = clean
TARGET_$($(TARCH)_CLEAN_V9A)_V        = clean
TARGET_$($(TARCH)_CLEAN_V9B)_V        = clean
TARGET_$($(TARCH)_CLEAN_V9C)_V        = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V8P)_V  = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V8PB)_V = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V8PC)_V = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V8PA)_V = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V9)_V   = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V9A)_V  = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V9B)_V  = clean
TARGET_$($(TARCH)_CLEAN_DEBUG_V9C)_V  = clean

TARGET_$($(TARCH)_PREPROC_V8P)_V              = com
TARGET_$($(TARCH)_PREPROC_V8PB)_V             = com
TARGET_$($(TARCH)_PREPROC_V8PC)_V             = com
TARGET_$($(TARCH)_PREPROC_V8PA)_V             = com
TARGET_$($(TARCH)_PREPROC_V9)_V               = com
TARGET_$($(TARCH)_PREPROC_V9A)_V              = com
TARGET_$($(TARCH)_PREPROC_V9B)_V              = com
TARGET_$($(TARCH)_PREPROC_V9C)_V              = com

TARGET_$($(TARCH)_CLEAN_PREPROC_V8P)_V        = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V8PB)_V       = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V8PC)_V       = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V8PA)_V       = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V9)_V         = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V9A)_V        = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V9B)_V        = clean
TARGET_$($(TARCH)_CLEAN_PREPROC_V9C)_V        = clean

TARGET_$($(TARCH)_LINT_V8P)_V              = com
TARGET_$($(TARCH)_LINT_V8PB)_V             = com
TARGET_$($(TARCH)_LINT_V8PC)_V             = com
TARGET_$($(TARCH)_LINT_V8PA)_V             = com
TARGET_$($(TARCH)_LINT_V9)_V               = com
TARGET_$($(TARCH)_LINT_V9A)_V              = com
TARGET_$($(TARCH)_LINT_V9B)_V              = com
TARGET_$($(TARCH)_LINT_V9C)_V              = com

TARGET_$($(TARCH)_CLEAN_LINT_V8P)_V        = clean
TARGET_$($(TARCH)_CLEAN_LINT_V8PB)_V       = clean
TARGET_$($(TARCH)_CLEAN_LINT_V8PC)_V       = clean
TARGET_$($(TARCH)_CLEAN_LINT_V8PA)_V       = clean
TARGET_$($(TARCH)_CLEAN_LINT_V9)_V         = clean
TARGET_$($(TARCH)_CLEAN_LINT_V9A)_V        = clean
TARGET_$($(TARCH)_CLEAN_LINT_V9B)_V        = clean
TARGET_$($(TARCH)_CLEAN_LINT_V9C)_V        = clean

TARGET_tcov_V                              = com
TARGET_$($(TARCH)_TCOV_V8P)_V              = com
TARGET_$($(TARCH)_TCOV_V8PB)_V             = com
TARGET_$($(TARCH)_TCOV_V8PC)_V             = com
TARGET_$($(TARCH)_TCOV_V8PA)_V             = com
TARGET_$($(TARCH)_TCOV_V9)_V               = com
TARGET_$($(TARCH)_TCOV_V9A)_V              = com
TARGET_$($(TARCH)_TCOV_V9B)_V              = com
TARGET_$($(TARCH)_TCOV_V9C)_V              = com

TARGET_clean_tcov_V                        = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V8P)_V        = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V8PB)_V       = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V8PC)_V       = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V8PA)_V       = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V9)_V         = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V9A)_V        = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V9B)_V        = clean
TARGET_$($(TARCH)_CLEAN_TCOV_V9C)_V        = clean

TARGET_$($(TARCH)_ASMC_I386)_V             = asmc_com_i386
TARGET_$($(TARCH)_SSE_I386)_V              = sse_com_i386
TARGET_$($(TARCH)_CLEAN_ASMC_I386)_V       = asmc_clean_i386
TARGET_$($(TARCH)_CLEAN_SSE_I386)_V        = sse_clean_i386

TARGET_$($(TARCH)_ASMC_AMD64)_V            = asmc_com_amd64
TARGET_$($(TARCH)_SSE_AMD64)_V             = sse_com_amd64
TARGET_$($(TARCH)_CLEAN_ASMC_AMD64)_V      = asmc_clean_amd64
TARGET_$($(TARCH)_CLEAN_SSE_AMD64)_V       = sse_clean_amd64

TARGET_VA = $(TARGET_$@_V)

#
# Builtin targets for compilation variants
#

get_makefile : $(MAKEFILE)

com : get_makefile $(DIR_O) $(OBJS) \
      $(OBJS_UTILS_ALT) $(OBJS_ALT) \
      $(OBJS_STDC) $(OBJS_STDC_ALT) \
      $(OBJS_VIS1) $(OBJS_S_VIS1)   \
      $(OBJS_VIS2) $(OBJS_S_VIS2)

asmc_com_i386 : get_makefile $(DIR_O) $(OBJS)  \
      $(OBJS_UTILS_ALT) $(OBJS_ALT) \
      $(OBJS_STDC) $(OBJS_STDC_ALT) \
      $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT) \
      $(ASM_OBJS) $(ASM_OBJS_STDC) \
      $(ASM_OBJS_STDC_ALT)

sse_com_i386 : get_makefile $(DIR_O) $(OBJS)  \
      $(OBJS_UTILS_ALT) $(OBJS_ALT) \
      $(OBJS_STDC) $(OBJS_STDC_ALT)

asmc_com_amd64 : get_makefile $(DIR_O) $(OBJS)  \
      $(OBJS_UTILS_ALT) $(OBJS_ALT) \
      $(OBJS_STDC) $(OBJS_STDC_ALT) \
      $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT) \
      $(ASM_OBJS) $(ASM_OBJS_STDC) \
      $(ASM_OBJS_STDC_ALT)

sse_com_amd64 : get_makefile $(DIR_O) $(OBJS)  \
      $(OBJS_UTILS_ALT) $(OBJS_ALT) \
      $(OBJS_STDC) $(OBJS_STDC_ALT)

$($(TARCH)_COM) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) $(TARGET_VA)

$($(TARCH)_V8P) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8P_MLIB_DEFINES)" $(TARGET_VA)

$(sparc_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSA)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" $(TARGET_VA)

$(i386_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" $(TARGET_VA)

$(sparc_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSB)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" $(TARGET_VA)

$(i386_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_V8PC) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSC)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PC_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_V9) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$(sparc_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9A)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$(i386_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$(sparc_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9B)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$(i386_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_V9C) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9C)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9C_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

#
# Builtin targets for debug compilation
#

debug_all : debug $($(TARCH)_DEBUG_V8P) $($(TARCH)_DEBUG_V8PA)
debug_all_v9 : debug $($(TARCH)_DEBUG_V9) $($(TARCH)_DEBUG_V9A)

debug : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$($(TARCH)_ARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		$(TARGET_VA)

$($(TARCH)_DEBUG_V8P) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8P_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_DEBUG_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSB) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_DEBUG_V8PC) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSC) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PC_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_DEBUG_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSA) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_DEBUG_V9) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_DEBUG_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V9A) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_DEBUG_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V9B) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_DEBUG_V9C) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"INLINE=$(INLINE_$(TARCH)_V9C) $(INLINE_$(TARCH)_DEBUG)" \
		"CFLAGS_DEBUG=$(CFLAGS_DEBUG_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_DEBUG_OPTIMIZE_V)" \
		"LDFLAGS_DEBUG=$(LDFLAGS_DEBUG_V)" \
		"RCFLAGS_DEBUG=$(RCFLAGS_DEBUG_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9C_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

#
# Builtin clean targets
#

clean_all: clean $($(TARCH)_CLEAN_V8P) $($(TARCH)_CLEAN_V8PA) \
           $($(TARCH)_CLEAN_V8PB) $($(TARCH)_CLEAN_V9)        \
           $($(TARCH)_CLEAN_V8PC) $($(TARCH)_CLEAN_V9A)       \
           $($(TARCH)_CLEAN_V9B) $($(TARCH)_CLEAN_V9C)

clean:
	$(RM) $(OBJS) $(OBJS_DEPEND)        \
          $(OBJS_UTILS_ALT) $(OBJS_ALT) \
          $(OBJS_STDC) $(OBJS_STDC_ALT) \
	      $(OBJS_VIS1) $(OBJS_S_VIS1)   \
	      $(OBJS_VIS2) $(OBJS_S_VIS2)

asmc_clean_i386:
	$(RM) $(OBJS) $(OBJS_DEPEND)                             \
          $(OBJS_UTILS_ALT) $(OBJS_ALT)                      \
	      $(OBJS_STDC) $(OBJS_STDC_ALT)                      \
          $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT)              \
          $(ASM_OBJS) $(ASM_OBJS_STDC) $(ASM_OBJS_STDC_ALT)

asmc_clean_amd64:
	$(RM) $(OBJS) $(OBJS_DEPEND)                             \
          $(OBJS_UTILS_ALT) $(OBJS_ALT)                      \
	      $(OBJS_STDC) $(OBJS_STDC_ALT)                      \
          $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT)              \
          $(ASM_OBJS) $(ASM_OBJS_STDC) $(ASM_OBJS_STDC_ALT)

sse_clean_i386:
	$(RM) $(OBJS) $(OBJS_DEPEND)                             \
          $(OBJS_UTILS_ALT) $(OBJS_ALT)                      \
	      $(OBJS_STDC) $(OBJS_STDC_ALT)                      \
          $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT)              \
          $(ASM_OBJS) $(ASM_OBJS_STDC) $(ASM_OBJS_STDC_ALT)

sse_clean_amd64:
	$(RM) $(OBJS) $(OBJS_DEPEND)                             \
          $(OBJS_UTILS_ALT) $(OBJS_ALT)                      \
	      $(OBJS_STDC) $(OBJS_STDC_ALT)                      \
          $(ASM_OBJS_UTILS_ALT) $(ASM_OBJS_ALT)              \
          $(ASM_OBJS) $(ASM_OBJS_STDC) $(ASM_OBJS_STDC_ALT)

$($(TARCH)_CLEAN_COM) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) $(TARGET_VA)

$($(TARCH)_CLEAN_V8P) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V8PB) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V8PC) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V8PA) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V9) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V9A) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V9B) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_V9C) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

#
# Builtin clean debug targets
#

clean_debug_all : clean_debug $($(TARCH)_CLEAN_DEBUG_V8P) \
		  $($(TARCH)_CLEAN_DEBUG_V8PA) $($(TARCH)_CLEAN_DEBUG_V8PB)\
		  $($(TARCH)_CLEAN_DEBUG_V9) $($(TARCH)_CLEAN_DEBUG_V9A) \
		  $($(TARCH)_CLEAN_DEBUG_V9B)

clean_debug :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$($(TARCH)_ARCH)-debug" $(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V8P) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" $(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V8PB) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V8PC) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V8PA) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V9) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" $(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V9A) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V9B) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_DEBUG_V9C) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-debug" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

#
# Builtin targets for compilation i-files
#

pre : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" com

$($(TARCH)_PREPROC_V8P) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8P_MLIB_DEFINES)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSB)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_S_VIS1=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V8PC) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSC)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_S_VIS1=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PC_MLIB_DEFINES)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSA)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V9) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9A)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9B)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_S_VIS1=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

$($(TARCH)_PREPROC_V9C) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9C)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=" \
		"SRCS_S_VIS1=" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9C_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"COMPILE.c=$(CC) $$(CFLAGS) -P" $(TARGET_VA)

#
# Builtin clean i-file targets
#

clean_pre : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		 clean

$($(TARCH)_CLEAN_PREPROC_V8P) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \

$($(TARCH)_CLEAN_PREPROC_V8PB) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V8PC) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V8PA) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V9) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V9A) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V9B) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_PREPROC_V9C) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"DIR_MODE=preproc" "OBJ_EXT=.i" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)


#
# Builtin targets for lint
#

lint : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" com

$($(TARCH)_LINT_V8P) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8P_MLIB_DEFINES)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSB)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V8PC) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSC)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PC_MLIB_DEFINES)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSA)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V9) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9A)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V9A)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9B)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V9B)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

$($(TARCH)_LINT_V9C) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"INLINE=$(INLINE_$(TARCH)_V9C)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"LINTFLAGS_CHIP_V=$(LINTFLAGS_$(TARCH)_V9C)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		"SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9C_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"COMPILE.c=$$(LINT.c)" "CC_OUTFILE= 2>\$$@" $(TARGET_VA)

#
# Builtin clean lint targets
#

clean_lint : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		 clean

$($(TARCH)_CLEAN_LINT_V8P) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V8PB) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V8PC) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V8PA) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V9) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V9A) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V9B) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_LINT_V9C) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"DIR_MODE=lint" "OBJ_EXT=.lint" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

#
# Builtin targets for tcov-a
#

tcov : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$($(TARCH)_ARCH)-tcov" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		$(TARGET_VA)

$($(TARCH)_TCOV_V8P) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUS)" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8P_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_TCOV_V8PB) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSB) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSB)" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PB_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_TCOV_V8PC) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSC) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSC)" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PC_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_TCOV_V8PA) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V8PLUSA) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8PLUSA)" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V8PA_MLIB_DEFINES)" $(TARGET_VA)

$($(TARCH)_TCOV_V9) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9)" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_TCOV_V9A) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V9A) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9A)" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_TCOV_V9B) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V9B) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9B)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9B)" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9B_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

$($(TARCH)_TCOV_V9C) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"INLINE=$(INLINE_$(TARCH)_V9C) $(INLINE_$(TARCH)_TCOV)" \
		"CFLAGS_TCOV=$(CFLAGS_TCOV_V)" \
		"CFLAGS_OPTIMIZE=$(CFLAGS_TCOV_OPTIMIZE_V)" \
		"LDFLAGS_TCOV=$(LDFLAGS_TCOV_V)" \
		"RCFLAGS_TCOV=$(RCFLAGS_TCOV_V)" \
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9C)" \
		"ASFLAGS_CHIP_V=$(ASFLAGS_$(TARCH)_V9C)" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" "SRCS_ALT=$(SRCS_ALT_V)" \
		"UTILS_ALT=$(UTILS_ALT_V)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9C_MLIB_DEFINES)" \
		"DIRS_SUNMATH=$(DIRS_SUNMATH_V9)" $(TARGET_VA)

#
# Builtin clean tcov targets
#

clean_tcov :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$($(TARCH)_ARCH)-tcov" $(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V8P) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8P_DIR)" $(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V8PB) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PB_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V8PC) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PC_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V8PA) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V8PA_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V9) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9_DIR)" $(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V9A) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9A_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V9B) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9B_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

$($(TARCH)_CLEAN_TCOV_V9C) :
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"ARCH=$(TARCH)-tcov" \
		"CHIP_DIR_V=$($(TARCH)_V9C_DIR)" \
		"SRCS=$(SRCS_V)" \
		"SRCS_S=$(SRCS_SV)" \
		$(TARGET_VA)

#
# Builtin targets for compilation s-files
#

$($(TARCH)_ASMC_I386) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=asmc" "x86_ICC_DIR=i386+sse" "OBJ_EXT=.s" "OBJ_EXT2=.o"\
		"COMPILE.c=perl $(MLIB_HOME)/tools/gen_asm.pl $(CC) \$$(CFLAGS) -S" \
		"COMPILE.S=$(AS_ALT)" \
		CFLAGS_$(TARCH)_V=""\
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8A)" \
		"DIR_O=\$$(DIR_S_V)" $(TARGET_VA)

$($(TARCH)_SSE_I386) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=obj" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" "OBJ_EXT=.o"\
		CFLAGS_$(TARCH)_V=""\
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V8A)" \
		"DIR_O=\$$(DIR_O_V)" $(TARGET_VA)

$($(TARCH)_ASMC_AMD64) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=asmc" "x86_ICC_DIR=amd64+sse" "OBJ_EXT=.s" "OBJ_EXT2=.o"\
		"COMPILE.c=perl $(MLIB_HOME)/tools/gen_asm.pl $(CC) \$$(CFLAGS) -S" \
		"COMPILE.S=$(AS_ALT)" \
		CFLAGS_$(TARCH)_V=""\
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIR_O=\$$(DIR_S_V)" $(TARGET_VA)

$($(TARCH)_SSE_AMD64) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=obj" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=amd64+sse" "OBJ_EXT=.o"\
		CFLAGS_$(TARCH)_V=""\
		"CFLAGS_CHIP_V=$(CFLAGS_$(TARCH)_V9A)" \
		"SPECIAL_$(TARCH)_MLIB_DEFINES=$(SPECIAL_$(TARCH)_V9A_MLIB_DEFINES)" \
		"DIR_O=\$$(DIR_O_V)" $(TARGET_VA)

#
# Builtin clean s-file targets
#

$($(TARCH)_CLEAN_ASMC_I386) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=asmc" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" "OBJ_EXT=.s" "OBJ_EXT2=.o"\
		 $(TARGET_VA)
     
$($(TARCH)_CLEAN_SSE_I386) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=obj" "x86_ICC_DIR=i386+sse" "x86_GCC_DIR=i386+sse" "OBJ_EXT=.o"\
		 $(TARGET_VA)
     
$($(TARCH)_CLEAN_ASMC_AMD64) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=asmc" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=amd64+sse" "OBJ_EXT=.s" "OBJ_EXT2=.o"\
		 $(TARGET_VA)
     
$($(TARCH)_CLEAN_SSE_AMD64) : get_makefile
	@$(MAKE) -f $(MAKEFILE) MAKEFILE=$(MAKEFILE) \
		"DIR_MODE=obj" "x86_ICC_DIR=amd64+sse" "x86_GCC_DIR=amd64+sse" "OBJ_EXT=.o"\
		 $(TARGET_VA)

#
# allow custom file to override stuff specified above.
#  Typically set to /dev/null
#

include $(CONFIG.$(TARCH).OVERRIDES)
